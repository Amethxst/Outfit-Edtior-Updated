<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:xDev">

    <Style x:Key="WatermarkOld" TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="{DynamicResource Nunito}"/>
        <Setter Property="FontSize" Value="12.0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="CaretBrush" Value="{DynamicResource TextBoxForegroundThemeBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="local:CornerRadiusSetter.CornerRadius" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}" x:Name="main">
                    <ControlTemplate.Resources>
                        <local:IsStringNotEmpty x:Key="isStringNotEmpty"/>
                    </ControlTemplate.Resources>
                    <Grid>
                        <GroupBox x:Name="border_header" Background="{DynamicResource TextBoxBackground}" BorderBrush="{DynamicResource TextBoxBorderInner}" Visibility="Collapsed" BorderThickness="1">
                            <GroupBox.Header>
                                <TextBlock Text="{TemplateBinding Tag}" FontSize="11" FontFamily="{DynamicResource Nunito}" FontWeight="Bold" Foreground="{DynamicResource TextColor}"/>
                            </GroupBox.Header>
                        </GroupBox>
                        <Border x:Name="border_noheader" Background="{DynamicResource TextBoxBackground}" BorderBrush="{DynamicResource TextBoxBorderInner}" BorderThickness="1" CornerRadius="{TemplateBinding local:CornerRadiusSetter.CornerRadius}" Visibility="Visible"/>
                        <ScrollViewer Margin="7,10,0,0" x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Label Margin="5,0,0,0" x:Name="WaterMarkLabel" Content="{TemplateBinding Tag}" 
                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                               Visibility="Collapsed" Foreground="Gray" FontFamily="{DynamicResource Nunito}" IsEnabled="False" FontSize="{TemplateBinding FontSize}"/>
                    </Grid>
                    <ControlTemplate.Triggers>




                        <DataTrigger Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter TargetName="border_header" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="border_noheader" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="WaterMarkLabel" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="7,0,0,0"/>
                            <Setter TargetName="WaterMarkLabel" Property="Margin" Value="5,0,0,0"/>
                        </DataTrigger>
                        


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource isStringNotEmpty}}" Value="false"/>
                                <Condition Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource isStringNotEmpty}}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border_header" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="border_noheader" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="WaterMarkLabel" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Text, RelativeSource={RelativeSource Self}, Converter={StaticResource isStringNotEmpty}}" Value="false"/>
                                <Condition Binding="{Binding Path=Tag, RelativeSource={RelativeSource Self}, Converter={StaticResource isStringNotEmpty}}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border_header" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="border_noheader" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="WaterMarkLabel" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_ContentHost" Property="Margin" Value="7,0,0,0"/>
                            <Setter TargetName="WaterMarkLabel" Property="Margin" Value="5,0,0,0"/>
                        </MultiDataTrigger>


                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="DimGray"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="border_noheader" Property="BorderBrush" Value="{DynamicResource TextBoxBorder}"/>
                            <Setter TargetName="border_header" Property="BorderBrush" Value="{DynamicResource TextBoxBorder}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderInner}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="local:CornerRadiusSetter.CornerRadius" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="{TemplateBinding local:CornerRadiusSetter.CornerRadius}" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                        <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding local:CornerRadiusSetter.CornerRadius}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding ElementName="Header" Path="ActualWidth" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>